# Copyright 2021 Comcast Cable Communications Management, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")

import("${chip_root}/build/chip/tools.gni")

import("${build_root}/config/linux/pkg_config.gni")

pkg_config("openssl_config") {
  packages = [ "openssl" ]
}

copy("libcertifier_cert_copy") {
  sources = [ "certifier/libcertifier-cert.crt" ]
  outputs = [ "$root_out_dir/libcertifier-cert.crt" ]
}

action("generate_dac_chain") {
  script = "generate_dac_chain.py"
  sources = [ "certifier/resources/dac-commissioner.p12" ]
  outputs = [
    "${root_out_dir}/CertifierDacChain.h",
    "${root_out_dir}/pai.pem",
    "${root_out_dir}/dac.pem",
    "${root_out_dir}/keypair.pem",
  ]

  args = rebase_path(sources, "") + rebase_path(outputs, root_out_dir)
}

executable("certifier-tool") {
  sources = [
    "CertifierCredentialIssuerCommands.h",
    "CertifierDACProvider.cpp",
    "CertifierDACProvider.h",
    "CertifierOperationalCredentialsIssuer.cpp",
    "CertifierOperationalCredentialsIssuer.h",
    "main.cpp",
  ]

  include_dirs = [
    ".",
    "${root_out_dir}",
    "certifier/include",
    "certifier/internal_headers",
  ]

  deps = [
    ":generate_dac_chain",
    "${chip_root}/examples/chip-tool:chip-tool-utils",
    "${chip_root}/src/platform/logging:force_stdio",
  ]

  lib_dirs = [ "." ]
  libs = [
    "certifier",
    "curl",
    "crypto",
    "ssl",
  ]

  configs += [ ":openssl_config" ]

  output_dir = root_out_dir
}
